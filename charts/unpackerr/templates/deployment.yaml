apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with $env := .Values.env }}{{ toYaml $env | nindent 12 }}{{- end }}
        {{ if .Values.config.webserver.metrics }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
             httpGet:
               path: /
               port: http
             initialDelaySeconds: 15
             periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
        {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: config
          {{- if or .Values.lidarr.enabled .Values.radarr.enabled .Values.readarr.enabled .Values.sonarr.enabled }}
            - mountPath: /secrets
              name: secrets
              readOnly: true
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: unpackerr
            items:
              - key: config
                path: unpackerr.conf
      {{- if or .Values.lidarr.enabled .Values.radarr.enabled .Values.readarr.enabled .Values.sonarr.enabled }}
        - name: secrets
          projected:
            sources:
            {{- if .Values.lidarr.enabled }}
            - secret:
                name: lidarr
                items:
                - key: api-key
                  path: lidarr
            {{- end }}
            {{- if .Values.radarr.enabled }}
            - secret:
                name: radarr
                items:
                - key: api-key
                  path: radarr
            {{- end }}
            {{- if .Values.readarr.enabled }}
            - secret:
                name: readarr
                items:
                - key: api-key
                  path: readarr
            {{- end }}
            {{- if .Values.sonarr.enabled }}
            - secret:
                name: sonarr
                items:
                - key: api-key
                  path: sonarr
            {{- end }}
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
